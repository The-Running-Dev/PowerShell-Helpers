function Send-SlackNotification {
    [CmdletBinding()]
    param(
        [Parameter(Position = 0, Mandatory, ValueFromPipeline)][ValidateNotNullOrEmpty()][string] $notification
    )

    $payload = @{
        channel     = $OctopusParameters['Channel'];
        username    = $OctopusParameters['Username'];
        icon_url    = $OctopusParameters['IconUrl'];
        attachments = @(
            @{
                fallback = $notification["fallback"];
                color    = $notification["color"];
                fields   = @(
                    @{
                        title = $notification["title"];
                        value = $notification["value"];
                    })
            }
        )
    }

    Invoke-RestMethod `
        -Method POST `
        -Body ($payload | ConvertTo-Json -Depth 4) `
        -Uri $OctopusParameters['HookUrl'] `
        -ContentType 'application/json'
}

$includeMachineName = [boolean]::Parse($OctopusParameters['IncludeMachineName'])

if ($includeMachineName) {
    $machineName = $OctopusParameters['Octopus.Machine.Name']
    $formattedMachineName = "($MachineName)"
}

if ($OctopusParameters['Octopus.Deployment.Error'] -eq $null) {
    Send-SlackNotification @{
        title    = "Success";
        value    = "Deploy $OctopusProjectName release $OctopusReleaseNumber to $OctopusEnvironmentName $FormattedMachineName";
        fallback = "Deployed $OctopusProjectName release $OctopusReleaseNumber to $OctopusEnvironmentName successfully";
        color    = "good";
    }
}
else {
    Slack-Rich-Notification @{
        title    = "Failed";
        value    = "Deploy $OctopusProjectName release $OctopusReleaseNumber to $OctopusEnvironmentName $FormattedMachineName";
        fallback = "Failed to deploy $OctopusProjectName release $OctopusReleaseNumber to $OctopusEnvironmentName";
        color    = "danger";
    }
}