function New-MySSQLDatabase {
    [CmdletBinding(SupportsShouldProcess = $true)]
    param(
        [Parameter(Position = 0, Mandatory, ValueFromPipeline)][ValidateNotNullOrEmpty()][string] $server,
        [Parameter(Position = 1, Mandatory, ValueFromPipelineByPropertyName)][ValidateNotNullOrEmpty()][string] $database,
        [Parameter(Position = 2, Mandatory, ValueFromPipelineByPropertyName)][ValidateNotNullOrEmpty()][string] $user,
        [Parameter(Position = 3, Mandatory, ValueFromPipelineByPropertyName)][ValidateNotNullOrEmpty()][string] $password
    )
    $message = "`nCreating '$database' on '$server'"

    if ($PSCmdlet.ShouldProcess("$message")) {
        Write-Host $message

        $sqlServer = New-Object Microsoft.SqlServer.Management.Smo.Server $server
        $sqlServerDatabase = New-Object Microsoft.SqlServer.Management.Smo.Database $sqlServer, $database
        $sqlServerDatabase.Create()
    }

    & dotnet $script:Config.DatabaseToolPath Create `
        -server="$($script:Config.DatabaseServer)" `
        -database="$($script:Config.DatabaseName)" `
        -scriptsDir="$($script:Config.DatabaseScriptsPath)" `
        -createUser="$($script:Config.DatabaseUser)" `
        -createUserPassword="$($script:Config.DatabaseUserPassword)"

    if ($script:CreateTestData) {
        & dotnet $script:Config.DatabaseToolPath TestData `
            -server="$($script:Config.DatabaseServer)" `
            -database="$($script:Config.DatabaseName)" `
            -scriptsDir="$($script:Config.DatabaseScriptsPath)"
    }
}

function Temp {
    <#
    [void][system.reflection.Assembly]::LoadWithPartialName("MySql.Data")

    $connStr = "server=localhost;Persist Security Info=false;user id=" + $dbusername + ";pwd=" + $dbpassword + ";"

    $conn = New-Object MySql.Data.MySqlClient.MySqlConnection($connStr)
    $conn.Open()
    $cmd = New-Object MySql.Data.MySqlClient.MySqlCommand
    $cmd.Connection = $conn
    $cmd.CommandText = "DROP DATABASE IF EXISTS " + $dbname
    $cmd.ExecuteNonQuery()

    $cmd.CommandText = 'CREATE SCHEMA `' + $dbname + '`'

    $cmd.ExecuteNonQuery()
    $conn.Close()

    $sqlfile = "E:\Database Journal\2012\Mar\create_powershell_test_table.sql"
    mysql $dbname -u $dbusername â€“p $dbpassword -e "source $sqlfile"

    foreach ($i in Import-Csv $csvfile) {
        $cmd.CommandText =
        "INSERT INTO customers (id,name,email,phone,street_address) VALUES ("
        + $i.id + ",'" + $i.name + "','" + $i.email + "','" + $i.phone + "','" + $i.street_address + "');"
        $cmd.ExecuteNonQuery()
    }
    #>
}